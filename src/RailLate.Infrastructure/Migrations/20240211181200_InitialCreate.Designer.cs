// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RailLate.Infrastructure.DatabaseContext;

#nullable disable

namespace RailLate.Infrastructure.Migrations
{
    [DbContext(typeof(EfContext))]
    [Migration("20240211181200_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RailLate.Domain.Entities.Agency", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("agency_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("agency_email");

                    b.Property<string>("FareURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("agency_fare_url");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("agency_lang");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("agency_name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("agency_phone");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("agency_timezone");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("agency_url");

                    b.HasKey("Id");

                    b.ToTable("Agencies");
                });

            modelBuilder.Entity("RailLate.Domain.Entities.Calendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_date");

                    b.Property<bool>("Friday")
                        .HasColumnType("bit")
                        .HasColumnName("friday");

                    b.Property<byte>("Mask")
                        .HasColumnType("tinyint");

                    b.Property<bool>("Monday")
                        .HasColumnType("bit")
                        .HasColumnName("monday");

                    b.Property<bool>("Saturday")
                        .HasColumnType("bit")
                        .HasColumnName("saturday");

                    b.Property<string>("ServiceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("service_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.Property<bool>("Sunday")
                        .HasColumnType("bit")
                        .HasColumnName("sunday");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Thursday")
                        .HasColumnType("bit")
                        .HasColumnName("thursday");

                    b.Property<bool>("Tuesday")
                        .HasColumnType("bit")
                        .HasColumnName("tuesday");

                    b.Property<bool>("Wednesday")
                        .HasColumnType("bit")
                        .HasColumnName("wednesday");

                    b.HasKey("Id");

                    b.ToTable("Calendars");
                });

            modelBuilder.Entity("RailLate.Domain.Entities.CalendarDate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("ServiceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("service_id");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CalendarDates");
                });

            modelBuilder.Entity("RailLate.Domain.Entities.FareAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AgencyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("agency_id");

                    b.Property<string>("CurrencyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("currency_type");

                    b.Property<string>("FareId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fare_id");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int")
                        .HasColumnName("payment_method");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("price");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransferDuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("transfer_duration");

                    b.Property<long>("Transfers")
                        .HasColumnType("bigint")
                        .HasColumnName("transfers");

                    b.HasKey("Id");

                    b.ToTable("FareAttributes");
                });

            modelBuilder.Entity("RailLate.Domain.Entities.FareRule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContainsId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contains_id");

                    b.Property<string>("DestinationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("destination_id");

                    b.Property<string>("FareId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fare_id");

                    b.Property<string>("OriginId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("origin_id");

                    b.Property<string>("RouteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("route_id");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FareRules");
                });

            modelBuilder.Entity("RailLate.Domain.Entities.FeedInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("feed_end_date");

                    b.Property<string>("Lang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("feed_lang");

                    b.Property<string>("PublisherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("feed_publisher_name");

                    b.Property<string>("PublisherUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("feed_publisher_url");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("feed_start_date");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("feed_version");

                    b.HasKey("Id");

                    b.ToTable("FeedInfos");
                });

            modelBuilder.Entity("RailLate.Domain.Entities.Frequency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("end_time");

                    b.Property<bool?>("ExactTimes")
                        .HasColumnType("bit")
                        .HasColumnName("exact_times");

                    b.Property<string>("HeadwaySecs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("headway_secs");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("start_time");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TripId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("trip_id");

                    b.HasKey("Id");

                    b.ToTable("Frequencies");
                });

            modelBuilder.Entity("RailLate.Domain.Entities.Level", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("level_id");

                    b.Property<double>("Index")
                        .HasColumnType("float")
                        .HasColumnName("level_index");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("level_name");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("RailLate.Domain.Entities.Pathway", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("pathway_id");

                    b.Property<string>("FromStopId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("from_stop_id");

                    b.Property<int>("IsBidirectional")
                        .HasColumnType("int")
                        .HasColumnName("is_bidirectional");

                    b.Property<double?>("Length")
                        .HasColumnType("float")
                        .HasColumnName("length");

                    b.Property<double?>("MaxSlope")
                        .HasColumnType("float")
                        .HasColumnName("max_slope");

                    b.Property<double?>("MinWidth")
                        .HasColumnType("float")
                        .HasColumnName("min_width");

                    b.Property<int>("PathwayMode")
                        .HasColumnType("int")
                        .HasColumnName("pathway_mode");

                    b.Property<string>("ReversedSignpostedAs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reversed_signposted_as");

                    b.Property<string>("SignpostedAs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("signposted_as");

                    b.Property<int?>("StairCount")
                        .HasColumnType("int")
                        .HasColumnName("stair_count");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToStopId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("to_stop_id");

                    b.Property<int?>("TraversalTime")
                        .HasColumnType("int")
                        .HasColumnName("traversal_time");

                    b.HasKey("Id");

                    b.ToTable("Pathways");
                });

            modelBuilder.Entity("RailLate.Domain.Entities.Route", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("route_id");

                    b.Property<string>("AgencyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("agency_id");

                    b.Property<int?>("Color")
                        .HasColumnType("int")
                        .HasColumnName("route_color");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("route_desc");

                    b.Property<string>("LongName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("route_long_name");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("route_short_name");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TextColor")
                        .HasColumnType("int")
                        .HasColumnName("route_text_color");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("route_type");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("route_url");

                    b.HasKey("Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("RailLate.Domain.Entities.Shape", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("shape_id");

                    b.Property<double?>("DistanceTravelled")
                        .HasColumnType("float")
                        .HasColumnName("shape_dist_traveled");

                    b.Property<double>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("shape_pt_lat");

                    b.Property<double>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("shape_pt_lon");

                    b.Property<long>("Sequence")
                        .HasColumnType("bigint")
                        .HasColumnName("shape_pt_sequence");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shapes");
                });

            modelBuilder.Entity("RailLate.Domain.Entities.Stop", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("stop_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stop_code");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stop_desc");

                    b.Property<double>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("stop_lat");

                    b.Property<string>("LevelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("level_id");

                    b.Property<int?>("LocationType")
                        .HasColumnType("int")
                        .HasColumnName("location_type");

                    b.Property<double>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("stop_lon");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stop_name");

                    b.Property<string>("ParentStation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("parent_station");

                    b.Property<string>("PlatformCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("platform_code");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stop_timezone");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stop_url");

                    b.Property<string>("WheelchairBoarding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName(" wheelchair_boarding ");

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("zone_id");

                    b.HasKey("Id");

                    b.ToTable("Stops");
                });

            modelBuilder.Entity("RailLate.Domain.Entities.StopTime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ArrivalTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("arrival_time");

                    b.Property<DateTime?>("DepartureTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("departure_time");

                    b.Property<int?>("DropOffType")
                        .HasColumnType("int")
                        .HasColumnName("drop_off_type");

                    b.Property<int?>("PickupType")
                        .HasColumnType("int")
                        .HasColumnName("pickup_type");

                    b.Property<double?>("ShapeDistTravelled")
                        .HasColumnType("float")
                        .HasColumnName("shape_dist_traveled");

                    b.Property<string>("StopHeadsign")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stop_headsign");

                    b.Property<string>("StopId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stop_id");

                    b.Property<long>("StopSequence")
                        .HasColumnType("bigint")
                        .HasColumnName("stop_sequence");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimepointType")
                        .HasColumnType("int")
                        .HasColumnName("timepoint");

                    b.Property<string>("TripId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("trip_id");

                    b.HasKey("Id");

                    b.ToTable("StopTimes");
                });

            modelBuilder.Entity("RailLate.Domain.Entities.Transfer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FromStopId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("from_stop_id");

                    b.Property<string>("MinimumTransferTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("min_transfer_time");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToStopId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("to_stop_id");

                    b.Property<int>("TransferType")
                        .HasColumnType("int")
                        .HasColumnName("transfer_type");

                    b.HasKey("Id");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("RailLate.Domain.Entities.Trip", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("trip_id");

                    b.Property<int?>("AccessibilityType")
                        .HasColumnType("int")
                        .HasColumnName("wheelchair_accessible");

                    b.Property<string>("BlockId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("block_id");

                    b.Property<int?>("Direction")
                        .HasColumnType("int")
                        .HasColumnName("direction_id");

                    b.Property<string>("Headsign")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("trip_headsign");

                    b.Property<string>("RouteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("route_id");

                    b.Property<string>("ServiceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("service_id");

                    b.Property<string>("ShapeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shape_id");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("trip_short_name");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trips");
                });
#pragma warning restore 612, 618
        }
    }
}
